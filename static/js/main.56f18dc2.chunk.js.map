{"version":3,"sources":["assets/img/user.svg","Components/post.js","App.js","index.js"],"names":["Post","props","className","content","src","gif","alt","App","useState","open","setopen","mydata","setmydata","selectedgif","setselectedgif","setcontent","posts","setposts","post","contentref","useRef","useEffect","current","el","focus","name","user","ref","html","onChange","e","console","log","target","value","handleContetnChange","onClick","val","length","fetch","then","res","json","data","results","handleSearch","type","placeholder","map","item","gifurl","media","url","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAe,MAA0B,iC,uBCWxBA,EAVF,SAACC,GACZ,OACE,sBAAKC,UAAU,kCAAf,UACE,mBAAGA,UAAU,MAAb,SAAoBD,EAAME,UAC1B,qBAAKC,IAAKH,EAAMI,IAAKC,IAAI,SC8HlBC,MA9Hf,SAAaN,GAAQ,IAAD,EACMO,oBAAS,GADf,mBACXC,EADW,KACLC,EADK,OAEUF,mBAAS,IAFnB,mBAEXG,EAFW,KAEHC,EAFG,OAGmBJ,qBAHnB,mBAGXK,EAHW,KAGCC,EAHD,OAIWN,mBAAS,IAJpB,mBAIXL,EAJW,KAIHY,EAJG,OAKOP,mBAAS,IALhB,mBAKXQ,EALW,KAKLC,EALK,KAOdC,EAAQ,CACVf,UACAE,IAAIQ,GAGAM,EAAaC,mBA8CnB,OA5CAC,qBAAU,WACTF,EAAWG,QAAQC,GAAGD,QAAQE,WA4C7B,sBAAKtB,UAAU,sCAAf,UACE,oBAAIA,UAAU,4BAAd,SAA2CD,EAAMwB,OACjD,sBAAKvB,UAAU,gBAAf,UAEE,qBAAKA,UAAU,yDAAf,SACE,0BAASA,UAAU,gBAAnB,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,iBAAiBE,IAAKsB,EAAMpB,IAAI,KAC/C,cAAC,IAAD,CACEqB,IAAKR,EACLS,KAAMzB,EACN0B,SAAU,SAACC,GAAD,OAzBI,SAACA,GACzBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBnB,EAAWe,EAAEG,OAAOC,OAuBOC,CAAoBL,IACrC5B,UAAU,qCAIZW,EAAe,qBACfuB,QAAS,WAlCnBtB,EAAe,KAmCLZ,UAAU,QACVE,IAAKS,EACLP,IAAI,KACH,QAKP,0BAASJ,UAAU,mEAAnB,UACE,sBACEkC,QAAS,WApEjB1B,GAASD,IAqEDP,UAAU,iFAFZ,iBAMA,wBAAQkC,QAAS,kBAzCvBnB,EAAS,CAACC,GAAF,mBAAUF,KAClBD,EAAW,IACXD,EAAe,SACfK,EAAWG,QAAQC,GAAGD,QAAQE,SAsCmBtB,UAAU,mCAArD,kBACCO,EACC,sBAAKP,UAAU,qDAAf,UACE,uBACE2B,SAAU,SAACC,GAAD,OA1EH,SAACA,GACpB,IAAIO,EAAMP,EAAEG,OAAOC,MACdG,EAAIC,OAAS,GACdC,MAAM,mCAAD,OAAoCF,EAApC,8BAAoEG,MAAK,SAACC,GAC7E,OAAOA,EAAIC,UACVF,MAAK,SAACG,GACL/B,EAAU+B,EAAKC,YAoEMC,CAAaf,IAC9B5B,UAAU,6DACV4C,KAAK,OACLC,YAAY,eAGd,kCAEGpC,EAAOqC,KAAI,SAACC,GAAD,OAAe,qBAC7B/C,UAAU,OACVkC,QAAS,kBAxEIc,EAwEkBD,EAAKE,MAAM,GAAG9C,IAAI+C,IAvE3DrB,QAAQC,IAAIkB,GACZpC,EAAeoC,GACftC,EAAU,SACVF,GAASD,GAJa,IAACyC,GAyEb9C,IAAK6C,EAAKE,MAAM,GAAG9C,IAAI+C,IACvB9C,IAAI,aAON,SAIN,qBAAKJ,UAAU,QAAf,SACEc,EAAMgC,KAAI,SAACC,EAAKI,GAAN,OAAgB,cAAC,EAAD,CAAkBlD,QAAS8C,EAAK9C,QAASE,IAAK4C,EAAK5C,KAAxCgD,YCvH7CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK/B,KAAK,eAEZgC,SAASC,eAAe,W","file":"static/js/main.56f18dc2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.8f6c6dae.svg\";","\n  const Post = (props) =>{\n    return (\n      <div className=\"bg-white w-1/4 mx-auto p-2 mb-2\">\n        <p className=\"p-1\">{props.content}</p>\n        <img src={props.gif} alt=\"\" />\n      </div>\n    )\n  }\n\n\n  export default Post;","import { useState,useRef,useEffect } from \"react\";\nimport user from \"./assets/img/user.svg\";\nimport ContentEditable from \"react-contenteditable\";\nimport Post from \"./Components/post\";\n\nfunction App(props) {\n  const [open, setopen] = useState(false);\n  const [mydata, setmydata] = useState([]);\n  const [selectedgif,setselectedgif] = useState()\n  const [content,setcontent] = useState('')\n  const [posts,setposts] = useState([])\n\n  let post  = {\n    content,\n    gif:selectedgif\n  }\n\n  const contentref = useRef();\n\n  useEffect(() => {\n   contentref.current.el.current.focus();\n  })\n\n  const handleClick = () => {\n    setopen(!open);\n  };\n\n  const handleSearch = (e) =>{\n    let val = e.target.value;\n     if (val.length > 3){\n        fetch(`https://g.tenor.com/v1/search?q=${val}&key=A4YZJPS6QSL3&limit=3`).then((res) =>{\n          return res.json()\n        }).then((data) =>{\n            setmydata(data.results);\n        })\n     }\n    \n    \n  }\n  const handleSelection = (gifurl) =>{\n    console.log(gifurl)\n    setselectedgif(gifurl);\n    setmydata([]);\n    setopen(!open);\n  }\n\n  const handleRemove = () =>{\n    setselectedgif('')\n  }\n\n  const handleContetnChange = (e) =>{\n      console.log(e.target.value)\n      setcontent(e.target.value)\n  }\n\n  const handleCreatePost = () =>{\n    setposts([post,...posts])\n    setcontent('')\n    setselectedgif('')\n    contentref.current.el.current.focus()\n  }\n   \n\n  return (\n    <div className=\"container py-16 mx-auto bg-gray-200\">\n      <h1 className=\"text-2xl text-center my-2\">{props.name}</h1>\n      <div className=\"w-2/6 mx-auto\">\n        \n        <div className=\"bg-white w-full p-5 shadow-sm break-words rounded-t-sm\">\n          <section className=\"flex flex-col\">\n            <div className=\"flex w-full\">\n              <img className=\"w-12 h-12 mr-2\" src={user} alt=\"\" />\n              <ContentEditable\n                ref={contentref}\n                html={content}\n                onChange={(e) => handleContetnChange(e)}\n                className=\"ml-3 w-5/6 focus:outline-none\"\n              />\n            </div>\n\n            { selectedgif ?  <img\n              onClick={() => handleRemove()}\n              className=\"mt-10\"\n              src={selectedgif}\n              alt=\"\"\n            />:''}\n           \n          </section>\n        </div>\n         {/* bottom bar */}\n        <section className=\"bg-gray-300 px-3 flex items-center justify-between py-2 relative\">\n          <span\n            onClick={() => handleClick()}\n            className=\"bg-white border cursor-pointer border-gray-200 px-3 py-1 text-gray-500 rounded\"\n          >\n            gif\n          </span>\n          <button onClick={() => handleCreatePost()} className=\"py-2 px-2 bg-blue-600 text-white\">post</button>\n          {open ? (\n            <div className=\"w-5/6 px-3 py-2 top-12 bg-white shadow-xl absolute\">\n              <input\n                onChange={(e) => handleSearch(e)}\n                className=\"w-full px-1 py-2 border border-gray-300 focus:outline-none\"\n                type=\"text\"\n                placeholder=\"search gif\"\n              />\n              {/* results section */}\n              <section>\n\n                {mydata.map((item) =>      <img\n              className=\"mt-2\"\n              onClick={() => handleSelection(item.media[0].gif.url)}\n              src={item.media[0].gif.url}\n              alt=\"\"\n            />)  }\n             \n    \n              </section>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </section>\n      </div>\n      <div className=\"my-10\">\n      { posts.map((item,index) => <Post key={index} content={item.content} gif={item.gif} />) }\n          </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App name=\"Post App\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}